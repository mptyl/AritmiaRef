/*
 * File: app/view/prestazione/Prestazione.js
 *
 * This file was generated by Sencha Architect version 4.3.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AritmiaRef.view.prestazione.Prestazione', {
    extend: 'Ext.form.Panel',
    alias: 'widget.prestazione.prestazione',

    requires: [
        'AritmiaRef.view.prestazione.PrestazioneViewModel',
        'AritmiaRef.view.prestazione.PrestazioneViewController',
        'Ext.form.field.ComboBox',
        'Ext.form.field.TextArea',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Fill'
    ],

    controller: 'prestazione.prestazione',
    viewModel: {
        type: 'prestazione.prestazione'
    },
    bodyPadding: 10,
    fieldDefaults: {
        labelWidth: 120,
        labelAlign: 'right',
        selectOnFocus: true
    },

    items: [
        {
            xtype: 'combobox',
            anchor: '100%',
            fieldLabel: 'Codice prestazione:',
            name: 'prestazioneFk',
            autoLoadOnValue: true,
            autoSelect: false,
            autoSelectLast: false,
            displayField: 'code',
            forceSelection: true,
            queryMode: 'local',
            store: 'Prestazioni',
            typeAhead: true,
            valueField: 'id',
            bind: {
                value: '{recordPrestazione.prestazioneFk}'
            },
            listeners: {
                select: 'onPrestazioneComboboxSelect'
            }
        },
        {
            xtype: 'textareafield',
            anchor: '100%',
            minHeight: 300,
            fieldLabel: 'Prestazione:',
            name: 'description',
            bind: {
                value: '{recordPrestazione.description}'
            }
        }
    ],
    dockedItems: [
        {
            xtype: 'toolbar',
            dock: 'bottom',
            ui: 'footer',
            items: [
                {
                    xtype: 'button',
                    handler: function(button, e) {
                        this.up('window').close();
                    },
                    text: 'Cancel'
                },
                {
                    xtype: 'tbfill'
                },
                {
                    xtype: 'button',
                    text: 'Salva',
                    listeners: {
                        click: 'onSaveButtonClick'
                    }
                }
            ]
        }
    ]

});